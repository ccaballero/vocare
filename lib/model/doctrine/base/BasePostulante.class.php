<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Postulante', 'doctrine');

/**
 * BasePostulante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $convocatoria_id
 * @property varchar $ci
 * @property integer $cod_sis
 * @property integer $telefono
 * @property string $direccion
 * @property integer $numero_hojas
 * @property enum $estado
 * @property string $observacion
 * @property Doctrine_Collection $User
 * @property Doctrine_Collection $Convocatoria
 * @property Doctrine_Collection $Requerimiento
 * @property Doctrine_Collection $Requisito
 * @property Doctrine_Collection $Documento
 * @property Doctrine_Collection $PostulanteRequerimientos
 * @property Doctrine_Collection $PostulanteRequisito
 * @property Doctrine_Collection $PostulanteDocumento
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getUserId()                   Returns the current record's "user_id" value
 * @method integer             getConvocatoriaId()           Returns the current record's "convocatoria_id" value
 * @method varchar             getCi()                       Returns the current record's "ci" value
 * @method integer             getCodSis()                   Returns the current record's "cod_sis" value
 * @method integer             getTelefono()                 Returns the current record's "telefono" value
 * @method string              getDireccion()                Returns the current record's "direccion" value
 * @method integer             getNumeroHojas()              Returns the current record's "numero_hojas" value
 * @method enum                getEstado()                   Returns the current record's "estado" value
 * @method string              getObservacion()              Returns the current record's "observacion" value
 * @method Doctrine_Collection getUser()                     Returns the current record's "User" collection
 * @method Doctrine_Collection getConvocatoria()             Returns the current record's "Convocatoria" collection
 * @method Doctrine_Collection getRequerimiento()            Returns the current record's "Requerimiento" collection
 * @method Doctrine_Collection getRequisito()                Returns the current record's "Requisito" collection
 * @method Doctrine_Collection getDocumento()                Returns the current record's "Documento" collection
 * @method Doctrine_Collection getPostulanteRequerimientos() Returns the current record's "PostulanteRequerimientos" collection
 * @method Doctrine_Collection getPostulanteRequisito()      Returns the current record's "PostulanteRequisito" collection
 * @method Doctrine_Collection getPostulanteDocumento()      Returns the current record's "PostulanteDocumento" collection
 * @method Postulante          setId()                       Sets the current record's "id" value
 * @method Postulante          setUserId()                   Sets the current record's "user_id" value
 * @method Postulante          setConvocatoriaId()           Sets the current record's "convocatoria_id" value
 * @method Postulante          setCi()                       Sets the current record's "ci" value
 * @method Postulante          setCodSis()                   Sets the current record's "cod_sis" value
 * @method Postulante          setTelefono()                 Sets the current record's "telefono" value
 * @method Postulante          setDireccion()                Sets the current record's "direccion" value
 * @method Postulante          setNumeroHojas()              Sets the current record's "numero_hojas" value
 * @method Postulante          setEstado()                   Sets the current record's "estado" value
 * @method Postulante          setObservacion()              Sets the current record's "observacion" value
 * @method Postulante          setUser()                     Sets the current record's "User" collection
 * @method Postulante          setConvocatoria()             Sets the current record's "Convocatoria" collection
 * @method Postulante          setRequerimiento()            Sets the current record's "Requerimiento" collection
 * @method Postulante          setRequisito()                Sets the current record's "Requisito" collection
 * @method Postulante          setDocumento()                Sets the current record's "Documento" collection
 * @method Postulante          setPostulanteRequerimientos() Sets the current record's "PostulanteRequerimientos" collection
 * @method Postulante          setPostulanteRequisito()      Sets the current record's "PostulanteRequisito" collection
 * @method Postulante          setPostulanteDocumento()      Sets the current record's "PostulanteDocumento" collection
 * 
 * @package    .
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostulante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('postulante');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('convocatoria_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('ci', 'varchar', 12, array(
             'type' => 'varchar',
             'fixed' => 0,
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('cod_sis', 'integer', 9, array(
             'type' => 'integer',
             'fixed' => 0,
             'notnull' => true,
             'length' => 9,
             ));
        $this->hasColumn('telefono', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 10,
             ));
        $this->hasColumn('direccion', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 25,
             ));
        $this->hasColumn('numero_hojas', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 4,
             ));
        $this->hasColumn('estado', 'enum', 12, array(
             'type' => 'enum',
             'fixed' => 0,
             'values' => 
             array(
              0 => 'pendiente',
              1 => 'inscrito',
              2 => 'inhabilitado',
              3 => 'habilitado',
             ),
             'default' => 'pendiente',
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Convocatoria', array(
             'local' => 'convocatoria_id',
             'foreign' => 'id'));

        $this->hasMany('Requerimiento', array(
             'refClass' => 'PostulanteRequerimiento',
             'local' => 'postulante_id',
             'foreign' => 'requerimiento_id'));

        $this->hasMany('Requisito', array(
             'refClass' => 'PostulanteRequisito',
             'local' => 'postulante_id',
             'foreign' => 'requisito_id'));

        $this->hasMany('Documento', array(
             'refClass' => 'PostulanteDocumento',
             'local' => 'postulante_id',
             'foreign' => 'documento_id'));

        $this->hasMany('PostulanteRequerimiento as PostulanteRequerimientos', array(
             'local' => 'id',
             'foreign' => 'postulante_id'));

        $this->hasMany('PostulanteRequisito', array(
             'local' => 'id',
             'foreign' => 'postulante_id'));

        $this->hasMany('PostulanteDocumento', array(
             'local' => 'id',
             'foreign' => 'postulante_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}