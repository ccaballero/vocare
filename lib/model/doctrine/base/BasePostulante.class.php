<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Postulante', 'doctrine');

/**
 * BasePostulante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $convocatoria_id
 * @property string $apellido_paterno
 * @property string $apellido_materno
 * @property string $nombres
 * @property string $ci
 * @property string $sis
 * @property string $correo_electronico
 * @property string $telefono
 * @property string $direccion
 * @property integer $numero_hojas
 * @property datetime $fecha_entrega
 * @property enum $estado
 * @property string $observacion
 * @property string $confirmacion
 * @property Convocatoria $Convocatoria
 * @property Doctrine_Collection $Requerimientos
 * @property Doctrine_Collection $Requisitos
 * @property Doctrine_Collection $Documentos
 * @property Doctrine_Collection $PostulanteRequerimientos
 * @property Doctrine_Collection $PostulanteRequisitos
 * @property Doctrine_Collection $PostulanteDocumentos
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getConvocatoriaId()           Returns the current record's "convocatoria_id" value
 * @method string              getApellidoPaterno()          Returns the current record's "apellido_paterno" value
 * @method string              getApellidoMaterno()          Returns the current record's "apellido_materno" value
 * @method string              getNombres()                  Returns the current record's "nombres" value
 * @method string              getCi()                       Returns the current record's "ci" value
 * @method string              getSis()                      Returns the current record's "sis" value
 * @method string              getCorreoElectronico()        Returns the current record's "correo_electronico" value
 * @method string              getTelefono()                 Returns the current record's "telefono" value
 * @method string              getDireccion()                Returns the current record's "direccion" value
 * @method integer             getNumeroHojas()              Returns the current record's "numero_hojas" value
 * @method datetime            getFechaEntrega()             Returns the current record's "fecha_entrega" value
 * @method enum                getEstado()                   Returns the current record's "estado" value
 * @method string              getObservacion()              Returns the current record's "observacion" value
 * @method string              getConfirmacion()             Returns the current record's "confirmacion" value
 * @method Convocatoria        getConvocatoria()             Returns the current record's "Convocatoria" value
 * @method Doctrine_Collection getRequerimientos()           Returns the current record's "Requerimientos" collection
 * @method Doctrine_Collection getRequisitos()               Returns the current record's "Requisitos" collection
 * @method Doctrine_Collection getDocumentos()               Returns the current record's "Documentos" collection
 * @method Doctrine_Collection getPostulanteRequerimientos() Returns the current record's "PostulanteRequerimientos" collection
 * @method Doctrine_Collection getPostulanteRequisitos()     Returns the current record's "PostulanteRequisitos" collection
 * @method Doctrine_Collection getPostulanteDocumentos()     Returns the current record's "PostulanteDocumentos" collection
 * @method Postulante          setId()                       Sets the current record's "id" value
 * @method Postulante          setConvocatoriaId()           Sets the current record's "convocatoria_id" value
 * @method Postulante          setApellidoPaterno()          Sets the current record's "apellido_paterno" value
 * @method Postulante          setApellidoMaterno()          Sets the current record's "apellido_materno" value
 * @method Postulante          setNombres()                  Sets the current record's "nombres" value
 * @method Postulante          setCi()                       Sets the current record's "ci" value
 * @method Postulante          setSis()                      Sets the current record's "sis" value
 * @method Postulante          setCorreoElectronico()        Sets the current record's "correo_electronico" value
 * @method Postulante          setTelefono()                 Sets the current record's "telefono" value
 * @method Postulante          setDireccion()                Sets the current record's "direccion" value
 * @method Postulante          setNumeroHojas()              Sets the current record's "numero_hojas" value
 * @method Postulante          setFechaEntrega()             Sets the current record's "fecha_entrega" value
 * @method Postulante          setEstado()                   Sets the current record's "estado" value
 * @method Postulante          setObservacion()              Sets the current record's "observacion" value
 * @method Postulante          setConfirmacion()             Sets the current record's "confirmacion" value
 * @method Postulante          setConvocatoria()             Sets the current record's "Convocatoria" value
 * @method Postulante          setRequerimientos()           Sets the current record's "Requerimientos" collection
 * @method Postulante          setRequisitos()               Sets the current record's "Requisitos" collection
 * @method Postulante          setDocumentos()               Sets the current record's "Documentos" collection
 * @method Postulante          setPostulanteRequerimientos() Sets the current record's "PostulanteRequerimientos" collection
 * @method Postulante          setPostulanteRequisitos()     Sets the current record's "PostulanteRequisitos" collection
 * @method Postulante          setPostulanteDocumentos()     Sets the current record's "PostulanteDocumentos" collection
 * 
 * @package    .
 * @subpackage model
 * @author     Carlos Eduardo Caballero Burgoa
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostulante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('postulante');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('convocatoria_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'length' => 4,
             ));
        $this->hasColumn('apellido_paterno', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('apellido_materno', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('nombres', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('ci', 'string', 16, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 16,
             ));
        $this->hasColumn('sis', 'string', 9, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 9,
             ));
        $this->hasColumn('correo_electronico', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('telefono', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('direccion', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('numero_hojas', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'fixed' => 0,
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('fecha_entrega', 'datetime', null, array(
             'type' => 'datetime',
             'fixed' => 0,
             'notnull' => false,
             ));
        $this->hasColumn('estado', 'enum', 16, array(
             'type' => 'enum',
             'fixed' => 0,
             'values' => 
             array(
              0 => 'sin confirmacion',
              1 => 'pendiente',
              2 => 'inscrito',
              3 => 'inhabilitado',
              4 => 'habilitado',
             ),
             'default' => 'sin confirmacion',
             'notnull' => true,
             'length' => 16,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => '',
             ));
        $this->hasColumn('confirmacion', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 40,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Convocatoria', array(
             'local' => 'convocatoria_id',
             'foreign' => 'id'));

        $this->hasMany('Requerimiento as Requerimientos', array(
             'refClass' => 'PostulanteRequerimiento',
             'local' => 'postulante_id',
             'foreign' => 'requerimiento_id'));

        $this->hasMany('Requisito as Requisitos', array(
             'refClass' => 'PostulanteRequisito',
             'local' => 'postulante_id',
             'foreign' => 'requisito_id'));

        $this->hasMany('Documento as Documentos', array(
             'refClass' => 'PostulanteDocumento',
             'local' => 'postulante_id',
             'foreign' => 'documento_id'));

        $this->hasMany('PostulanteRequerimiento as PostulanteRequerimientos', array(
             'local' => 'id',
             'foreign' => 'postulante_id'));

        $this->hasMany('PostulanteRequisito as PostulanteRequisitos', array(
             'local' => 'id',
             'foreign' => 'postulante_id'));

        $this->hasMany('PostulanteDocumento as PostulanteDocumentos', array(
             'local' => 'id',
             'foreign' => 'postulante_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}