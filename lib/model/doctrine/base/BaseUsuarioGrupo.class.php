<?php

/**
 * BaseUsuarioGrupo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $grupo_id
 * @property sfGuardUser $Usuario
 * @property Grupo $Grupo
 * 
 * @method integer      getUserId()   Returns the current record's "user_id" value
 * @method integer      getGrupoId()  Returns the current record's "grupo_id" value
 * @method sfGuardUser  getUsuario()  Returns the current record's "Usuario" value
 * @method Grupo        getGrupo()    Returns the current record's "Grupo" value
 * @method UsuarioGrupo setUserId()   Sets the current record's "user_id" value
 * @method UsuarioGrupo setGrupoId()  Sets the current record's "grupo_id" value
 * @method UsuarioGrupo setUsuario()  Sets the current record's "Usuario" value
 * @method UsuarioGrupo setGrupo()    Sets the current record's "Grupo" value
 * 
 * @package    .
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuarioGrupo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario_grupo');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('grupo_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Usuario', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Grupo', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}