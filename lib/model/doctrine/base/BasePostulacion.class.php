<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Postulacion', 'doctrine');

/**
 * BasePostulacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $convocatoria_id
 * @property string $ci
 * @property string $cod_sis
 * @property string $telefono
 * @property string $direccion
 * @property integer $numero_hojas
 * @property enum $estado
 * @property string $observacion
 * @property Doctrine_Collection $User
 * @property Doctrine_Collection $Convocatoria
 * @property Doctrine_Collection $Requerimiento
 * @property Doctrine_Collection $Requisito
 * @property Doctrine_Collection $Documento
 * @property Doctrine_Collection $PostulacionRequerimientos
 * @property Doctrine_Collection $PostulacionRequisito
 * @property Doctrine_Collection $PostulacionDocumento
 * 
 * @method integer             getId()                        Returns the current record's "id" value
 * @method integer             getUserId()                    Returns the current record's "user_id" value
 * @method integer             getConvocatoriaId()            Returns the current record's "convocatoria_id" value
 * @method string              getCi()                        Returns the current record's "ci" value
 * @method string              getCodSis()                    Returns the current record's "cod_sis" value
 * @method string              getTelefono()                  Returns the current record's "telefono" value
 * @method string              getDireccion()                 Returns the current record's "direccion" value
 * @method integer             getNumeroHojas()               Returns the current record's "numero_hojas" value
 * @method enum                getEstado()                    Returns the current record's "estado" value
 * @method string              getObservacion()               Returns the current record's "observacion" value
 * @method Doctrine_Collection getUser()                      Returns the current record's "User" collection
 * @method Doctrine_Collection getConvocatoria()              Returns the current record's "Convocatoria" collection
 * @method Doctrine_Collection getRequerimiento()             Returns the current record's "Requerimiento" collection
 * @method Doctrine_Collection getRequisito()                 Returns the current record's "Requisito" collection
 * @method Doctrine_Collection getDocumento()                 Returns the current record's "Documento" collection
 * @method Doctrine_Collection getPostulacionRequerimientos() Returns the current record's "PostulacionRequerimientos" collection
 * @method Doctrine_Collection getPostulacionRequisito()      Returns the current record's "PostulacionRequisito" collection
 * @method Doctrine_Collection getPostulacionDocumento()      Returns the current record's "PostulacionDocumento" collection
 * @method Postulacion         setId()                        Sets the current record's "id" value
 * @method Postulacion         setUserId()                    Sets the current record's "user_id" value
 * @method Postulacion         setConvocatoriaId()            Sets the current record's "convocatoria_id" value
 * @method Postulacion         setCi()                        Sets the current record's "ci" value
 * @method Postulacion         setCodSis()                    Sets the current record's "cod_sis" value
 * @method Postulacion         setTelefono()                  Sets the current record's "telefono" value
 * @method Postulacion         setDireccion()                 Sets the current record's "direccion" value
 * @method Postulacion         setNumeroHojas()               Sets the current record's "numero_hojas" value
 * @method Postulacion         setEstado()                    Sets the current record's "estado" value
 * @method Postulacion         setObservacion()               Sets the current record's "observacion" value
 * @method Postulacion         setUser()                      Sets the current record's "User" collection
 * @method Postulacion         setConvocatoria()              Sets the current record's "Convocatoria" collection
 * @method Postulacion         setRequerimiento()             Sets the current record's "Requerimiento" collection
 * @method Postulacion         setRequisito()                 Sets the current record's "Requisito" collection
 * @method Postulacion         setDocumento()                 Sets the current record's "Documento" collection
 * @method Postulacion         setPostulacionRequerimientos() Sets the current record's "PostulacionRequerimientos" collection
 * @method Postulacion         setPostulacionRequisito()      Sets the current record's "PostulacionRequisito" collection
 * @method Postulacion         setPostulacionDocumento()      Sets the current record's "PostulacionDocumento" collection
 * 
 * @package    .
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostulacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('postulacion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('convocatoria_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('ci', 'string', 16, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 16,
             ));
        $this->hasColumn('cod_sis', 'string', 9, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'length' => 9,
             ));
        $this->hasColumn('telefono', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('direccion', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('numero_hojas', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'fixed' => 0,
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('estado', 'enum', 12, array(
             'type' => 'enum',
             'fixed' => 0,
             'values' => 
             array(
              0 => 'pendiente',
              1 => 'inscrito',
              2 => 'inhabilitado',
              3 => 'habilitado',
             ),
             'default' => 'pendiente',
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'notnull' => true,
             'default' => '',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Convocatoria', array(
             'local' => 'convocatoria_id',
             'foreign' => 'id'));

        $this->hasMany('Requerimiento', array(
             'refClass' => 'PostulacionRequerimiento',
             'local' => 'postulacion_id',
             'foreign' => 'requerimiento_id'));

        $this->hasMany('Requisito', array(
             'refClass' => 'PostulacionRequisito',
             'local' => 'postulacion_id',
             'foreign' => 'requisito_id'));

        $this->hasMany('Documento', array(
             'refClass' => 'PostulacionDocumento',
             'local' => 'postulacion_id',
             'foreign' => 'documento_id'));

        $this->hasMany('PostulacionRequerimiento as PostulacionRequerimientos', array(
             'local' => 'id',
             'foreign' => 'postulacion_id'));

        $this->hasMany('PostulacionRequisito', array(
             'local' => 'id',
             'foreign' => 'postulacion_id'));

        $this->hasMany('PostulacionDocumento', array(
             'local' => 'id',
             'foreign' => 'postulacion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}