Vocare
======

Sistema para la publicación de convocatorias.

Instalación:
------------

Paso 01:
Ir al sitio de instalación.
    cd /donde/quiera/que/se/encuentre

Paso 02:
Ejecutar el script necesario para la creación del conector de base de datos.
    sh shell/database.sh $HOST $DB $USER $PASS

Paso 03:
Editar y revisar el archivo de configuración de la base de datos.
    vim config/databases.yml

Paso 04:
Construir el esquema de la base de datos.
    sh shell/models.sh

Paso 05:
Rellenar la base de datos con la información de los fixtures de datos.
    sh shell/data.sh

Paso 06 (opcional):
Si se cuenta con los archivos csv (/data/csv/*), rellenar con la información de
estos a la base de datos.
    symfony vocare:loadCSV data/csv/01_postulantes.csv
    symfony vocare:loadCSV data/csv/02_postulantes.csv

Paso 06:
Crear la carpeta de log.
    mkdir log

Paso 07:
Colocar los permisos a las carpetas.
    chmod 777 log
    chmod 777 data/convocatorias
    chmod 777 data/convocatorias/documentacion

Paso 08:
Registrar un dominio de prueba.

Para Windows: c:/Windows/System32/drivers/boot/host <- comprobar, ni idea!
Para GNU/Linux: /etc/hosts

Agregar una linea mas o menos parecida a esta:
    127.0.0.1       vocare.local            vocare

Paso 09:
Comprobar la resolución de dominio:
    ping vocare.local

Ejemplo de una salida correcta:
    $ ping vocare.local
    PING vocare.local (127.0.0.1) 56(84) bytes of data.
    64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.071 ms
    64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.075 ms
    64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.073 ms

Paso 10:
Crear el host virtual para la ejecución del programa en el servidor web,
dependiendo del sistema operativo y la configuración de su servidor esto puede
variar un monton:

Ejemplo en Apache:
    <IfDefine DEFAULT_VHOST>
        <VirtualHost *:80>
            ServerName vocare.local
            DocumentRoot /var/www/vocare.local/web

            LogLevel debug
            ErrorLog /var/log/vocare/error.log
            CustomLog /var/log/vocare/access.log combined

            <Directory "/var/www/vocare.local/web">
                Options +Indexes FollowSymLinks
                DirectoryIndex index.php
                AllowOverride all
                Order allow,deny
                Allow from all
            </Directory>

            Alias /sf /opt/symfony/data/web/sf
            <Directory "/opt/symfony/data/web/sf">
                AllowOverride All
                Allow from All
            </Directory>
        </VirtualHost>
    </IfDefine>

* Se asume que se instalo el sistema en la carpeta /var/www/vocare.local.
* Se asume que tiene sus librerias symfony en /opt/symfony

Paso 11:
Si todingo esta correcto, probar en el navegador.
    links2 http://vocare.local

Configuración de latex:
-----------------------

Para el modulo de documentacion, se requieren algunas configuraciones
adicionales, a continuación detallo los pasos necesarios para la configuración
optima de esta funcionalidad.

Paso 01:
Para la configuración del administrador de volumenes de documentación, se
requiere tener instalado en el sistema operativo un paquete de compilación
de archivos .tex a archivos .pdf. Para un sistema operativo GNU/Linux
directamente se requiere que el programa pueda ejecutar el comando pdflatex.

Según las distribuciones de se estan usando se citan las que son necesarias:

* Debian/Ubuntu y afines:
    - texlive-base.
    - texlive-common.
    - texlive-latex-base.
    - texlive-latex-recommended.
    - texlive-fonts-recommended.

* CentOS:
    - tetex-latex.
    - tetex-fonts.

Paso 02:
Se debe configurar el archivo apps/convocatorias/config/app.yml

Ejemplo de archivo app.yml bien configurado:

all:
  sf_guard_plugin:
    routes_register: false
    allow_login_with_email: true
    signin_form: sfGuardCustomFormSignin
    success_signout_url: /acceder # do something in (development environment)
    remember_key_expiration_age: 2592000   # 30 days in seconds
    remember_cookie_name: myAppRememberMe
    default_from_email: vocare@cs.umss.edu.bo
  dir_generation: %SF_ROOT_DIR%/data/convocatorias
  xslt_transforms: %SF_ROOT_DIR%/data/xslt
  pdflatex: /usr/bin/pdflatex

Las variables imprescindibles para la generación de documentos son:
    * dir_generation -> Lugar donde se generan los archivos, debe tener los
                        permisos necesarios para poder crear y sobre-escribir
                        archivos.
    * xslt_transforms -> Archivo donde se encuentran los transformadores XSLT,
                         de preferencia no tocar este lugar.
    * pdflatex -> El path absoluto al comando pdflatex, dependiendo de la
                  distribucion puede ser diferente.

      ¿Como saber si tengo y donde esta instalado pdflatex?
      Facil, la clave es ejecutar lo siguiente:

        burbuja!carlos ~ $ whereis pdflatex
        pdflatex: /usr/bin/pdflatex /usr/bin/X11/pdflatex /usr/share/man/man1/pdflatex.1.gz
        burbuja!carlos ~ $ 

      El primero apunta al archivo binario que se necesita establecer.

Configuración de crontab:
-------------------------

El sistema tambien tiene la capacidad de automatizar ciertas tareas, para que
esta funcionalidad trabaje adecuadamente, se deben realizar configuraciones
adicionales, las que se detallan a continuación.

Para la automatización se ha diseñado un `task` de symfony, este se llama:

    vocare:crontab

Y esta diseñado para ser ejecutado desde el script crontab.sh.

Paso 01:
Verificar los paths del proyecto en el archivo crontab.sh (linea 3).

Paso 02:
Agregar una linea al fichero de ejecución en el demonio crontab.

Ejemplo de archivo para el demonio crontab:

0 * * * * sh /var/www/vocare.local/crontab.sh.

Si aún tiene dudas sobre la automatización de tareas, consulte a su proveedor de
información local.

Configuración de correo electrónico:
------------------------------------

